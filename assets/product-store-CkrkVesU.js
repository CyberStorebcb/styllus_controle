import{a9 as i,ai as a}from"./index-CcZL36bu.js";const d=i("productStore",{state:()=>({products:[{id:1,name:"Produto A",quantity:10},{id:2,name:"Produto B",quantity:5}],salesHistory:JSON.parse(localStorage.getItem("salesHistory"))||[]}),getters:{availableProducts:s=>s.products.filter(t=>t.quantity>0)},actions:{sellProduct(s,t,e){const o=this.products.find(r=>r.id===s);if(o&&o.quantity>=t){o.quantity-=t;const r={id:Date.now(),name:o.name,quantity:t,price:e,total:t*e,date:new Date().toLocaleString()};this.salesHistory.push(r),localStorage.setItem("salesHistory",JSON.stringify(this.salesHistory)),localStorage.setItem("products",JSON.stringify(this.products))}else throw new Error("Quantidade insuficiente no estoque.")},restockProduct(s,t){const e=this.products.find(o=>o.id===s);e&&(e.quantity+=t,localStorage.setItem("products",JSON.stringify(this.products)),a.create({type:"positive",message:`Produto "${e.name}" reabastecido com sucesso!`}))},addProduct(s){const t=this.products.length?Math.max(...this.products.map(e=>e.id))+1:1;this.products.push({id:t,...s}),localStorage.setItem("products",JSON.stringify(this.products)),a.create({type:"positive",message:`Produto "${s.name}" adicionado com sucesso!`})},deleteProduct(s){this.products=this.products.filter(t=>t.id!==s),localStorage.setItem("products",JSON.stringify(this.products)),a.create({type:"positive",message:"Produto exclu√≠do com sucesso!"})},loadProducts(){this.products=JSON.parse(localStorage.getItem("products"))||[],this.salesHistory=JSON.parse(localStorage.getItem("salesHistory"))||[]}}});export{d as u};
